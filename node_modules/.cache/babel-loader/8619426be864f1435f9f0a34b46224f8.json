{"ast":null,"code":"// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\nimport Rails from \"@rails/ujs\";\nimport Turbolinks from \"turbolinks\";\nimport * as ActiveStorage from \"@rails/activestorage\";\nimport \"channels\"; // require (lib/axios/dist/axios.standalone)\n// require (lib/CryptoJS/rollups/hmac-sha256)\n// require (lib/CryptoJS/rollups/sha256)\n// require (lib/CryptoJS/components/hmac)\n// require (lib/CryptoJS/components/enc-base64)\n// require (lib/url-template/url-template)\n// require (lib/apiGatewayCore/sigV4Client)\n// require (lib/apiGatewayCore/apiGatewayClient)\n// require (lib/apiGatewayCore/simpleHttpClient)\n// require (apigClientFactory)\n//= require_tree .\n//= require search\n\nfunction submitChat(e) {\n  var host = \"http://ec2-54-172-72-63.compute-1.amazonaws.com:5011/recommend?\";\n  var level = document.getElementById('level').value;\n  var budget = document.getElementById('budget').value;\n  var email = document.getElementById('email').value;\n\n  if (level === \"\" || budget === \"\") {\n    result_area = document.getElementById('hardware_info');\n    result_area.innerText = \"Need level and budget\";\n    return;\n  }\n\n  var url = host + \"level=\" + level + \"&budget=\" + budget;\n  var params = {\n    \"level\": level,\n    \"budget\": budget\n  };\n  var body = {};\n\n  if (email !== \"\") {\n    url = url + \"&email=\" + email;\n    params['email'] = email;\n    console.log(url);\n  }\n\n  var apigClient = apigClientFactory.newClient();\n  apigClient.recommendGet(params, body).then(function (result) {\n    console.log(result['data']);\n    var allHardwares = result['data']['body'];\n    console.log(allHardwares);\n    var hardwareNames = [\"CPU\", \"GPU\", \"RAM\", \"SSD\", \"HDD\", \"USB\"];\n    document.getElementById('hardware_info').innerText = \"Here is our recommendations: (More results are send to your email) \\n\";\n\n    for (var j = 0; j < hardwareNames.length; j++) {\n      var hardwareName = hardwareNames[j];\n      var hardwareList = allHardwares[hardwareName];\n      var hardwareArea = document.getElementById(hardwareName);\n      hardwareArea.innerText = hardwareName + \":\\n \";\n      hardwareArea.innerText += hardwareList[0];\n    }\n  })[\"catch\"](function (result) {\n    console.log(JSON.stringify(result));\n  }); // const httpRequest = new XMLHttpRequest();\n  // httpRequest.open('GET', url, true);\n  // httpRequest.send();\n  // httpRequest.onreadystatechange = function () {\n  //     if (httpRequest.readyState === 4 && httpRequest.status === 200) {\n  //         const json = httpRequest.responseText;\n  //         const allHardwares = JSON.parse(json)['body']\n  //         const hardwareNames = [\"CPU\", \"GPU\", \"RAM\", \"SSD\", \"HDD\", \"USB\"]\n  //         document.getElementById('hardware_info').innerText = \"Here is our recommendations: (More results are send to your email) \\n\";\n  //         for (let j = 0; j < hardwareNames.length; j++){\n  //             var hardwareName = hardwareNames[j]\n  //             const hardwareList = allHardwares[hardwareName]\n  //             const hardwareArea = document.getElementById(hardwareName)\n  //             hardwareArea.innerText = hardwareName + \":\\n \"\n  //             hardwareArea.innerText+=hardwareList[0]\n  //         }\n  //     }\n  // };\n}\n\nRails.start();\nTurbolinks.start();\nActiveStorage.start();","map":{"version":3,"sources":["/Users/keyzhang/WebZero/app/javascript/packs/application.js"],"names":["Rails","Turbolinks","ActiveStorage","submitChat","e","host","level","document","getElementById","value","budget","email","result_area","innerText","url","params","body","console","log","apigClient","apigClientFactory","newClient","recommendGet","then","result","allHardwares","hardwareNames","j","length","hardwareName","hardwareList","hardwareArea","JSON","stringify","start"],"mappings":"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","sourcesContent":["// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n\nimport Rails from \"@rails/ujs\"\nimport Turbolinks from \"turbolinks\"\nimport * as ActiveStorage from \"@rails/activestorage\"\nimport \"channels\"\n\n// require (lib/axios/dist/axios.standalone)\n// require (lib/CryptoJS/rollups/hmac-sha256)\n// require (lib/CryptoJS/rollups/sha256)\n// require (lib/CryptoJS/components/hmac)\n// require (lib/CryptoJS/components/enc-base64)\n// require (lib/url-template/url-template)\n// require (lib/apiGatewayCore/sigV4Client)\n// require (lib/apiGatewayCore/apiGatewayClient)\n// require (lib/apiGatewayCore/simpleHttpClient)\n// require (apigClientFactory)\n//= require_tree .\n//= require search\n\nfunction submitChat(e) {\n        const host = \"http://ec2-54-172-72-63.compute-1.amazonaws.com:5011/recommend?\"\n        var level = document.getElementById('level').value;\n        var budget = document.getElementById('budget').value;\n        var email = document.getElementById('email').value;\n\n        if (level === \"\" || budget === \"\") {\n            result_area = document.getElementById('hardware_info');\n            result_area.innerText = \"Need level and budget\"\n            return\n        }\n        \n        var url = host + \"level=\" + level + \"&budget=\" + budget;\n        var params = {\n            \"level\": level,\n            \"budget\": budget\n        };\n\n        var body = {\n        }\n\n        if (email !== \"\") {\n            url = url + \"&email=\" + email\n            params['email'] = email\n            console.log(url)\n        }\n\n        var apigClient = apigClientFactory.newClient();\n        apigClient.recommendGet(params, body)\n            .then(function(result){\n                console.log(result['data'])\n                const allHardwares = result['data']['body']\n                console.log(allHardwares)\n                const hardwareNames = [\"CPU\", \"GPU\", \"RAM\", \"SSD\", \"HDD\", \"USB\"]\n                document.getElementById('hardware_info').innerText = \"Here is our recommendations: (More results are send to your email) \\n\";\n                for (let j = 0; j < hardwareNames.length; j++){\n                    var hardwareName = hardwareNames[j]\n                    const hardwareList = allHardwares[hardwareName]\n                    const hardwareArea = document.getElementById(hardwareName)\n                    hardwareArea.innerText = hardwareName + \":\\n \"\n                    hardwareArea.innerText+=hardwareList[0]\n                }\n            }).catch( function(result){\n            console.log(JSON.stringify(result))\n        });\n\n\n        // const httpRequest = new XMLHttpRequest();\n        // httpRequest.open('GET', url, true);\n        // httpRequest.send();\n        // httpRequest.onreadystatechange = function () {\n        //     if (httpRequest.readyState === 4 && httpRequest.status === 200) {\n        //         const json = httpRequest.responseText;\n        //         const allHardwares = JSON.parse(json)['body']\n        //         const hardwareNames = [\"CPU\", \"GPU\", \"RAM\", \"SSD\", \"HDD\", \"USB\"]\n        //         document.getElementById('hardware_info').innerText = \"Here is our recommendations: (More results are send to your email) \\n\";\n        //         for (let j = 0; j < hardwareNames.length; j++){\n        //             var hardwareName = hardwareNames[j]\n        //             const hardwareList = allHardwares[hardwareName]\n        //             const hardwareArea = document.getElementById(hardwareName)\n        //             hardwareArea.innerText = hardwareName + \":\\n \"\n        //             hardwareArea.innerText+=hardwareList[0]\n        //         }\n        //     }\n        // };\n    }\nRails.start()\nTurbolinks.start()\nActiveStorage.start()\n"]},"metadata":{},"sourceType":"module"}